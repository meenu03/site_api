<?php

/**
 * @file
 * Modification to basic site info with API functionality.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function site_api_form_system_site_information_settings_alter(&$form, FormStateInterface $form_state, $form_id) {
	// Check for Site api key default value.
	$default_key = \Drupal::config('site.api')->get('siteapikey') != 'No API Key yet' ? \Drupal::config('site.api')->get('siteapikey') : '';

	// Create a new form field to enter site api key.
	$form['site_information']['siteapikey'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Site API Key'),
	    '#description' => t('Leave blank to set the default value as No API Key yet'),
	    '#default_value' => $default_key,
	);

	// Form validate handler.
	$form['#validate'][] = 'site_api_validate';

    //Submit handler to store siteapikey value.
    $form['#submit'][] = 'site_api_submit';
}

//Validate handler to validate siteapikey.
function site_api_validate(&$form, FormStateInterface $form_state) {
	// If site api key is empty then initiliase the key with given default value.
    if ($form_state->isValueEmpty('siteapikey')) {
      // Set to default "No API Key yet".
      $form_state->setValueForElement($form['site_information']['siteapikey'], 'No API Key yet');
    }
}

//Submit handler to store siteapikey value into config.
function site_api_submit(&$form, FormStateInterface $form_state) {
	// Store site api key value if not empty.
	if (!empty($form_state->getValue('siteapikey'))) {
		\Drupal::configFactory()->getEditable('site.api')
      	->set('siteapikey', $form_state->getValue('siteapikey'))
      	->save();

    	// Update form submit button text.
    	$form_state->setValue('submit', t('Update Configuration'));

    	// Show Drupal message to user.
   		if ($form_state->getValue('siteapikey') != 'No API Key yet') {
    		drupal_set_message('Site API Key updated with value:' . $form_state->getValue('siteapikey'));
    	}
  	}
}
